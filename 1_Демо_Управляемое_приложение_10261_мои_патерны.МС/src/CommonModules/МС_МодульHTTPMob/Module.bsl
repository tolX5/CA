Функция ОбработкаВходящихДанныхHTTP_Сервис(ЗапросОтКлиентаJSON, перИмяМетода)Экспорт
	
	СтруктураОтвет = Новый Структура("ДанныеОтвета,Отработало,ТекстОшибки,КодОтвета","",Истина,"",200);
	
	Если ВРег(перИмяМетода) = ВРег("GiveAllMetadate") Тогда
		
		ОтдайМетаданныеOData(СтруктураОтвет, ЗапросОтКлиентаJSON);
		
	ИначеЕсли ВРег(перИмяМетода) = ВРег("GoodMetadate") Тогда	
		
		ОткройМетаданныеODate(СтруктураОтвет, ЗапросОтКлиентаJSON);

	Иначе
		
		СтруктураОтвет.КодОтвета 	= 400;
		СтруктураОтвет.ТекстОшибки 	= "Unknow metod!!!";
		СтруктураОтвет.Отработало 	= Ложь; 
		СтруктураОтвет.ДанныеОтвета = "";
		
	КонецЕсли; 
	
	Возврат СтруктураОтвет;

КонецФункции // ()

Процедура ОтдайМетаданныеOData(СтруктураОтвет, ЗапросОтКлиентаJSON)

	СписокОбъектовOData = ПолучитьСписокОбъектовOData();
	УстановитьПривилегированныйРежим(Истина);
	СоставСтандартногоИнтерфейсаOData = ПолучитьСоставСтандартногоИнтерфейсаOData();
	
	РезультатОтвет = Новый Массив;
	
	Для каждого СтрокаСпискаОбъектов Из СписокОбъектовOData Цикл
	
		Состояние = Истина;
		ПрефиксИмениURL = ?(ПустаяСтрока(СтрокаСпискаОбъектов.Представление), "", СтрокаСпискаОбъектов.Представление);
		ИмяЗначение = СтрокаСпискаОбъектов.Значение;
		
		МассивДанногоТипа = Новый Массив;
		Для каждого ОбъектМетаданных Из Метаданные[ИмяЗначение] Цикл
			
			НайденOData = СоставСтандартногоИнтерфейсаOData.Найти(ОбъектМетаданных) <> Неопределено;
			МассивДанногоТипа.Добавить(Новый Структура("Имя,Синоним,ПрефиксИмениURL,Состояние",
					ОбъектМетаданных.Имя,
					ОбъектМетаданных.ПолноеИмя(),
					?(ПустаяСтрока(ПрефиксИмениURL), "", ПрефиксИмениURL +"_" +ОбъектМетаданных.Имя),
					НайденOData));
					
			Если НЕ НайденOData И Состояние Тогда
				Состояние = Ложь;
			КонецЕсли; 
		
		КонецЦикла; 
		
		РезультатОтвет.Добавить(Новый Структура("ИмяЗначение, ПрефиксИмениURL, Состояние, МассивДанногоТипа",
				СтрокаСпискаОбъектов.Значение,
				ПрефиксИмениURL,
				Состояние,
				МассивДанногоТипа));
	
	КонецЦикла; 
	
	УстановитьПривилегированныйРежим(Ложь);
	
	//все нормально
	ПараметрыJSON 	= Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Нет, " ", Истина, ЭкранированиеСимволовJSON.Нет, Ложь, Ложь, Ложь, Ложь);
	ЗаписьJSON		= Новый ЗаписьJSON;
	ЗаписьJSON.ПроверятьСтруктуру = Истина;
	ЗаписьJSON.УстановитьСтроку(ПараметрыJSON);
	
	ЗаписатьJSON(ЗаписьJSON, РезультатОтвет);
	СтрокаJSON = ЗаписьJSON.Закрыть();
	
	ЗаполнитьСтруктуруОтвета(СтруктураОтвет, 200, "", Истина, СтрокаJSON);
	
КонецПроцедуры
 
 Процедура ОткройМетаданныеODate(СтруктураОтвет, ЗапросОтКлиентаJSON)
	 
	 ЧтениеJSON = Новый ЧтениеJSON;
	 ЧтениеJSON.УстановитьСтроку(ЗапросОтКлиентаJSON);
	 
	 Попытка
	 
	 	ДопДанные = ПрочитатьJSON(ЧтениеJSON);
	 
	 Исключение
		 
		ЗаполнитьСтруктуруОтвета(СтруктураОтвет, 406, "Не удалось получить данные!", Ложь, "Х");
		Возврат;
		
	 КонецПопытки;
	 
	 Если ТипЗнч(ДопДанные) = Тип("Массив") Тогда
		 
		 УстановитьПривилегированныйРежим(Истина);
		
		 Попытка
		 
		 	УстановитьСоставСтандартногоИнтерфейсаOData(ДопДанные);
		 
		 Исключение
			 
			 ЗаполнитьСтруктуруОтвета( СтруктураОтвет, 406, "Передан не массив!", Ложь, "Х");
			 Возврат;
			 
		 КонецПопытки;
	 Иначе
		 
		 ЗаполнитьСтруктуруОтвета( СтруктураОтвет, 406, "Передан не массив!", Ложь, "Х");
		 Возврат;
	 
	 КонецЕсли; 
 
 КонецПроцедуры
 
 Функция ПолучитьСписокОбъектовOData()
	 
	СписокОбъектовOdata = Новый СписокЗначений;	
	СписокОбъектовOdata.Добавить("Справочники",			"Catalog");	
	СписокОбъектовOdata.Добавить("Документы",			"Document");
	СписокОбъектовOdata.Добавить("ЖурналыДокументов",	"DocumentJournal");
	СписокОбъектовOdata.Добавить("Константы",			"Constant");
	СписокОбъектовOdata.Добавить("ПланыОбмена",			"ExchangePlan");
	СписокОбъектовOdata.Добавить("ПланыСчетов",			"ChartOfAccounts");
	СписокОбъектовOdata.Добавить("ПланыВидовРасчета",	"ChartOfCalculationTypes");
	СписокОбъектовOdata.Добавить("ПланыВидовХарактеристик",	"ChartOfCharacteristicTypes");
	СписокОбъектовOdata.Добавить("РегистрыСведений",	"InformationRegister");
	СписокОбъектовOdata.Добавить("РегистрыНакопления",	"AccumulationRegister");
	СписокОбъектовOdata.Добавить("РегистрыРасчета",		"CalculationRegister");
	СписокОбъектовOdata.Добавить("РегистрыБухгалтерии",	"AccountingRegister");
	СписокОбъектовOdata.Добавить("БизнесПроцессы",		"BusinessProcess");
	СписокОбъектовOdata.Добавить("Задачи",				"Task");
	СписокОбъектовOdata.Добавить("Перечисления",		"");
	
	Возврат СписокОбъектовOdata;	
 
 КонецФункции // ПолучитьСписокОбъектовOData()
 
 Процедура ЗаполнитьСтруктуруОтвета(СтруктураОтвет, КодОтвета, ТекстОшибки, Отработало, ДанныеОтвета)
 
 	СтруктураОтвет.КодОтвета 	= КодОтвета;
	СтруктураОтвет.ТекстОшибки	= ТекстОшибки;
	СтруктураОтвет.Отработало	= Отработало;
	СтруктураОтвет.ДанныеОтвета = ДанныеОтвета;	
 
 КонецПроцедуры
